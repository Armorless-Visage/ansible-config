# Armorless-Visage 2017
---
- hosts: smb
  remote_user: ansibleadm
  become: yes
  vars:
    # Packages required for nfs and smb
    system_packages: ['samba', 'samba-libs', 'samba-common']
    # required services
    system_services: ['smb.service', 'nfs.service', 'rpcbind.service', 'nmb.service']
    samba_services: ['smb.service', 'nmb.service']
    # Current smb users
    smb_users: ['user0', 'user1', 'torrents']
    # firewalld conf 
    firewalld_services: ['ssh', 'samba', 'nfs']
    firewalld_zone: "dmz"
    
  tasks:
    - name: samba present and updated
      dnf: 
          name: "{{ item }}"
          state: latest
      become: yes
      become_method: sudo
      with_items: "{{ system_packages }}"
      register: updates
    
    - name: install /etc/exports
      copy: 
          src: "./assets/exports"
          dest: "/etc/exports"
          mode: "u=rw,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "exports_t"
          backup: yes
      register: etc_exports


    - name: install /etc/samba/smb.conf
      copy: 
          src: "./assets/smb.conf"
          dest: "/etc/samba/smb.conf"
          mode: "u=rw,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "samba_etc_t"
          backup: yes
      register: etc_smb

# NOTE: bug with this module and systemd results in service not found errors
    - name: start/enable system services
      systemd:
          name: "{{ item }}"
          state: "started"
          enabled: "yes"
          masked: "no"
      with_items: "{{ system_services }}"

    - name: set firewalld state
      firewalld:
          service: "{{ item }}"
          zone: "{{ firewalld_zone }}"
          permanent: yes
          state: enabled
      with_items: "{{ firewalld_services }}"


# if /etc/exports changed run exportfs -a
    - name: exportfs -a
      command: "exportfs -a"
      when: etc_exports.changed
# if /etc/samba/smb.conf changed restart the daemons
    - name: smb reload
      systemd:
        name: "{{ item }}"
        state: reloaded
      with_items: "{{ samba_services }}"
      when: etc_smb.changed

# if core services updated restart the daemons
# NOTE: using 'state: reloaded' produces an error about rpcbind.service
    - name: service update daemon reload
      systemd:
        name: "{{ item }}"
        state: restarted
      with_items: "{{ system_services }}"
      when: updates.changed
        
      
