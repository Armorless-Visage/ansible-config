# Armorless-Visage 2017
# http server for lan
# dhcp/dns backup server for lan
# logging server for lan
---
- hosts: www
  remote_user: ansibleadm
  become: yes
  vars:
    # Packages required for nfs and smb
    system_packages: ['httpd', 'dnsmasq', 'python-firewall', 'systemd-journal-remote']
    # required services
    system_services: ['httpd.service', 'dnsmasq.service', 'systemd-journal-remote.socket']
    # firewalld conf 
    firewalld_services: ['ssh', 'dns', 'dhcp', 'http', 'https']
#   firewalld_ports: ['55099/tcp']
    firewalld_zone: "dmz"
    
  tasks:
    - name: required packages present and updated
      dnf: 
          name: "{{ item }}"
          state: latest
      become: yes
      become_method: sudo
      with_items: "{{ system_packages }}"
      register: updates
# httpd/apache   
    - name: install /var/www/html/index.html
      copy: 
          src: "./assets/var/www/html/index.html"
          dest: "/var/www/html/index.html"
          mode: "u=r,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "httpd_sys_content_t"
          backup: yes
      register: index_html
    - name: install /var/www/html/style.css
      copy: 
          src: "./assets/var/www/html/style.css"
          dest: "/var/www/html/style.css"
          mode: "u=r,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "httpd_sys_content_t"
          backup: yes
      register: style_css
    - name: install /var/www/html/public/
      copy: 
          src: "./assets/var/www/html/public/"
          dest: "/var/www/html/public/"
          mode: "u=r,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "httpd_sys_content_t"
          backup: yes
      register: public_dir
      tags: apache
    - name: install /var/www/cgi-bin
      copy: 
          src: "./assets/var/www/cgi-bin/"
          dest: "/var/www/cgi-bin/"
          mode: "u=rx,g=rx,o=rx"
          seuser: "system_u" 
          serole: "object_r"
          setype: "httpd_sys_script_exec_t"
          backup: no
      register: cgi
      tags: apache

    - name: install /etc/httpd/
      copy: 
          src: "./assets/etc/httpd/"
          dest: "/etc/httpd/"
          mode: "u=r,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "httpd_config_t"
          backup: yes
      register: httpd_config

    - name: restart httpd
      systemd:
          name: "httpd.service"
          state: "restarted"
      when: index_html.changed or style_css.changed or httpd_config.changed

# dnsmasq
    - name: install /etc/dnsmasq.conf
      copy: 
          src: "./assets/etc/dnsmasq.conf"
          dest: "/etc/dnsmasq.conf"
          mode: "u=rw,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "dnsmasq_etc_t"
          backup: yes
      register: dnsmasq_conf
    - name: install /etc/resolv.hosts
      copy: 
          src: "./assets/etc/resolv.hosts"
          dest: "/etc/resolv.hosts"
          mode: "u=rw,g=r,o=r"
          seuser: "system_u" 
          serole: "object_r"
          setype: "dnsmasq_etc_t"
          backup: yes
      register: dnsmasq_resolv
    - name: install /etc/dnsmasq.d
      copy: 
          src: "./assets/etc/dnsmasq.d/"
          dest: "/etc/dnsmasq.d/"
          seuser: "system_u" 
          serole: "object_r"
          setype: "dnsmasq_etc_t"
          backup: yes
      register: dnsmasq_dir

    - name: restart dnsmasq
      systemd:
          name: "dnsmasq.service"
          state: "restarted"
      when: dnsmasq_conf.changed or dnsmasq_dir.changed

# NOTE: bug with this module and systemd results in service not found errors
    - name: start/enable system services
      systemd:
          name: "{{ item }}"
          state: "started"
          enabled: "yes"
          masked: "no"
      with_items: "{{ system_services }}"

    - name: set firewalld state (services)
      firewalld:
          service: "{{ item }}"
          zone: "{{ firewalld_zone }}"
          permanent: yes
          state: enabled
      with_items: "{{ firewalld_services }}"
      register: firewall_change

#    - name: set firewalld state (ports)
#      firewalld:
#          port: "{{ item }}"
#          zone: "{{ firewalld_zone }}"
#          permanent: yes
#          state: enabled
#      with_items: "{{ firewalld_ports }}"
#

# if core services updated restart the daemons
# NOTE: using 'state: reloaded' produces an error about rpcbind.service
    - name: service update daemon reload
      systemd:
        name: "{{ item }}"
        state: restarted
      with_items: "{{ system_services }}"
      when: updates.changed
        
      
