# Armorless-Visage 2017
# configuration baseline for a OpenBSD 6.1 home router
# provides ip forwarding, firewalling, dns, dhcp, nat
---
- hosts: router
  remote_user: ansibleadm
  become: yes
  become_method: doas
  vars:
    ansible_python_interpreter: "/usr/local/bin/python"
  tasks:
    
    - name: /etc/sysctl.conf
      copy: 
          src: "./assets/etc/sysctl.conf"
          dest: "/etc/sysctl.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
   
    # pf configuration 
    - name: /etc/pf.conf
      copy: 
          src: "./assets/etc/pf.conf"
          dest: "/etc/pf.conf"
          mode: "u=rw"
          backup: yes
      register: etc_pf
    - name: /etc/anchor_scrub
      copy: 
          src: "./assets/etc/anchor_scrub"
          dest: "/etc/anchor_scrub"
          mode: "u=rw"
          backup: yes
      register: anchor_scrub

    - name: /etc/anchor_torrents
      copy: 
          src: "./assets/etc/anchor_torrents"
          dest: "/etc/anchor_torrents"
          mode: "u=rw"
          backup: yes
      register: anchor_torrents

    - name: /etc/anchor_ps4
      copy: 
          src: "./assets/etc/anchor_ps4"
          dest: "/etc/anchor_ps4"
          mode: "u=rw"
          backup: yes
      register: anchor_ps4

    # dhclient/dhcpd
    - name: /etc/dhclient.conf
      copy: 
          src: "./assets/etc/dhclient.conf"
          dest: "/etc/dhclient.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: dhclient
    - name: /etc/dhcpd.conf
      copy: 
          src: "./assets/etc/dhcpd.conf"
          dest: "/etc/dhcpd.conf"
          mode: "u=rw,g=r"
          backup: yes
      register: dhcpd

    # doas.conf
    - name: /etc/doas.conf
      copy: 
          src: "./assets/etc/doas.conf"
          dest: "/etc/doas.conf"
          mode: "u=rw"
          backup: yes
      register: doas_conf

    # network interfaces
    - name: /etc/hostname.re0
      copy: 
          src: "./assets/etc/hostname.re0"
          dest: "/etc/hostname.re0"
          mode: "u=rw,g=r"
          backup: yes
      register: hostname_re0
    - name: /etc/hostname.em0
      copy: 
          src: "./assets/etc/hostname.em0"
          dest: "/etc/hostname.em0"
          mode: "u=rw,g=r"
          backup: yes
      register: hostname_em0
    - name: /etc/hosts
      copy: 
          src: "./assets/etc/hosts"
          dest: "/etc/hosts"
          mode: "u=rw,g=r"
          backup: yes
      register: etc_hosts

    # ntpd.conf
    - name: /etc/ntpd.conf
      copy: 
          src: "./assets/etc/ntpd.conf"
          dest: "/etc/ntpd.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: ntpd

    # resolv.conf
    - name: /etc/resolv.conf
      copy: 
          src: "./assets/etc/resolv.conf"
          dest: "/etc/resolv.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: resolv

    # myname
    - name: /etc/myname
      copy: 
          src: "./assets/etc/myname"
          dest: "/etc/myname"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: myname

    # unbound (DNS)
#    - name: /var/unbound/db/root.key
#      copy: 
#          src: "./assets/var/unbound/db/root.key"
#          dest: "/var/unbound/db/root.key"
#          mode: "u=rw,g=r"
#          backup: yes
#      register: dnssec_key
    # adserver blacklist
    - name: /var/unbound/etc/blacklist.txt
      copy: 
          src: "./assets/var/unbound/etc/blacklist.txt"
          dest: "/var/unbound/etc/blacklist.txt"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: blacklist
      tags: blacklist
    - name: /var/unbound/etc/unbound.conf
      copy: 
          src: "./assets/var/unbound/etc/unbound.conf"
          dest: "/var/unbound/etc/unbound.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: unbound_conf
    # crontab
    - name: /etc/crontab
      copy: 
          src: "./assets/etc/crontab"
          dest: "/etc/crontab"
          mode: "u=rw,g=r"
          backup: yes
          validate: 'crontab -u root %s' 
      register: crontab
    
    # snort
    - name: /etc/snort/snort.conf
      copy: 
          src: "./assets/etc/snort/snort.conf"
          dest: "/etc/snort/snort.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
#          validate: 'snort -T -c %s' 
      register: snort_config
    # snort
    - name: /etc/snort/threshold.conf
      copy: 
          src: "./assets/etc/snort/threshold.conf"
          dest: "/etc/snort/threshold.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: snort_threshold
    - name: /etc/snort/disablesid.conf
      copy: 
          src: "./assets/etc/snort/disablesid.conf"
          dest: "/etc/snort/disablesid.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: pulledpork_disable
    - name: /etc/snort/pulledpork.conf
      copy: 
          src: "./assets/etc/snort/pulledpork.conf"
          dest: "/etc/snort/pulledpork.conf"
          mode: "u=rw,g=r,o=r"
          backup: yes
      register: pulledpork_conf
    
    # actions to be taken when above sets state changed
    #
    - name: flush and reload pf rules
      shell: "pfctl -n -f /etc/pf.conf && pfctl -F rules -f /etc/pf.conf"
      when: etc_pf.changed or anchor_scrub.changed or anchor_ps4.changed or anchor_torrents.changed

    - name: reload dhcpd
      command: "rcctl restart dhcpd"
      when: dhcpd.changed
    
    - name: reload ntpd
      command: "rcctl restart ntpd"
      when: ntpd.changed

    - name: reload unbound
      command: "unbound-control reload"
      when: blacklist.changed or unbound_conf.changed
      #when: dnssec_key.changed or blacklist.changed or unbound_conf.changed
    
    - name: reload network
      command: "sh /etc/netstart"
      when: hostname_em0.changed or hostname_re0.changed
